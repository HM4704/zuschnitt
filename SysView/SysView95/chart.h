// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CChart wrapper class

class CChart : public CWnd
{
protected:
	DECLARE_DYNCREATE(CChart)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x7186232e, 0xceac, 0x11d4, { 0x8e, 0x7b, 0xc3, 0xbd, 0xf0, 0xd3, 0x8d, 0x3c } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	unsigned long GetLineColor();
	void SetLineColor(unsigned long);
	unsigned long GetGridColor();
	void SetGridColor(unsigned long);
	long GetRefreshTime();
	void SetRefreshTime(long);
	unsigned long GetBgColor();
	void SetBgColor(unsigned long);

// Operations
public:
	void MinMax(long ulMin, long ulMax);
	void Clear();
	BOOL Update(long dwValue);
	void SetControlInfo(LPCTSTR strControlName, LPUNKNOWN pManager);
	void AboutBox();
};
