// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "chart.h"

/////////////////////////////////////////////////////////////////////////////
// CChart

IMPLEMENT_DYNCREATE(CChart, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CChart properties

OLE_COLOR CChart::GetBackColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_BACKCOLOR, VT_I4, (void*)&result);
	return result;
}

void CChart::SetBackColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_BACKCOLOR, VT_I4, propVal);
}

unsigned long CChart::GetLineColor()
{
	unsigned long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CChart::SetLineColor(unsigned long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

unsigned long CChart::GetGridColor()
{
	unsigned long result;
	GetProperty(0x1, VT_I4, (void*)&result);
	return result;
}

void CChart::SetGridColor(unsigned long propVal)
{
	SetProperty(0x1, VT_I4, propVal);
}

long CChart::GetRefreshTime()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CChart::SetRefreshTime(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

unsigned long CChart::GetBgColor()
{
	unsigned long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CChart::SetBgColor(unsigned long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CChart operations

void CChart::MinMax(long ulMin, long ulMax)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ulMin, ulMax);
}

void CChart::Clear()
{
	InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CChart::Update(long dwValue)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		dwValue);
	return result;
}

void CChart::SetControlInfo(LPCTSTR strControlName, LPUNKNOWN pManager)
{
	static BYTE parms[] =
		VTS_BSTR VTS_UNKNOWN;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strControlName, pManager);
}

void CChart::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
